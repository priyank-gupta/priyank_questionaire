<% content_for(:js_css) do %>
	<%= stylesheet_link_tag 'ques_form' %>
	<%= javascript_include_tag '' %>
<% end %>
<%= form_for(@question) do |f| %>
  
  <%= render "question", :f => f %>
  
  <%= hidden_field_tag "type" %>
  <%= hidden_field_tag "#{@question.class.to_s.underscore}[admin_id]", session[:admin_id], :id => "question_admin_id" %>
  
  <div class="actions">
    <% if @question.new_record? %>
      <%= f.submit 'Create Question', :onclick => 'map_tags_and_type()', :id => "question_submit" %>
    <% else %>
      <%= f.submit 'Update Question', :onclick => 'map_tags_and_type()', :id => "question_submit" %>
    <% end %>
  </div>
<% end %>


<script>

function map_tags_and_type() {
  var ques_tags = $(".as-selection-item");
  var tags = [];
  for(var i = 0;i < ques_tags.length; i++) {
    tags.push($(ques_tags[i]).text().slice(1));
  }
  $("#as-values-tags").val(tags);
  
  var types = $("input[name$='[type]']");
  for(var i = 0; i <= types.length; i++) {
    if($(types[i]).attr('checked') == 'checked') {
      $('#type').val($(types[i]).val());
    }
  }
}

$("#question_submit").bind('click', map_answers);
$("#question_submit").bind('click', destroy_waste_options);

function map_answers() {
  if($('#type').val() == "MultipleChoice") {
    var ans = $("input[name='answer']");
    for(var i = 0; i<= ans.length; i++) {
      if($(ans[i]).is(':checked')) {
        var val = $(ans[i]).attr('value');
        $('#multiple_choice_options_attributes_'+val+'_answer').attr('value', true);
        break;
      }
    }
  } else if($('#type').val() == "MultipleChoiceAnswer") {
    var ans = $("input[id^='answer_']");
    for(var i = 0; i<= ans.length; i++) {
      var val = $(ans[i]).attr('value');
      if($(ans[i]).is(':checked')) {
        $('#multiple_choice_answer_options_attributes_'+val+'_answer').attr('value', true);
      }
    }
  }
}

function destroy_waste_options() {
  if($('#type').val() != "Subjective") {
    if($('#type').val() == "MultipleChoice") {
      var hidden_ids = $("input[id^='multiple_choice_options_'][id$='_id'][type='hidden']");
    } else if($('#type').val() == "MultipleChoiceAnswer") {
      var hidden_ids = $("input[id^='multiple_choice_answer_options_'][id$='_id'][type='hidden']");
    }
    for(var i = 0; i < hidden_ids.length; i++) {
      var body = hidden_ids[i].id.replace("id", "body");
      if($('#'+body).val() == "") {
        var destroy_id = body.replace("body", "_destroy");
        document.getElementById(destroy_id).value = "1";
      }
    }
  }
}

$(document).ready(change_answer_div("<%= @type %>"));

function change_answer_div(val) {
  if ("<%= !@question.new_record? %>") {
    var id = "<%= params[:id] %>";
  } else {
    var id = null;
  }
  if (val == "Subjective") {
    $("#for_option").addClass("hide");
    $("#for_option_error").addClass("hide");
  } else {
    $("#for_option").removeClass("hide");
    $("#for_option_error").removeClass("hide");
  }
   $.ajax({
    url: '<%= change_answer_div_questions_path %>', 
    dataType: 'script',
    type: 'get', 
    data: 'type='+val+"&id="+id
  });
}

$("#question_tag").autoSuggest("/questions/ques_tags.js", {minChars: 1, matchCase: false, searchObjProps: "name", startText: "Enter Tags Here", asHtmlID:"tags",  neverSubmit: true, preFill: "<%= @question.tag_list %>"});

</script>
